package dev.mvc.porder_detail;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;


@Controller
public class Porder_detailCont {
  
  @Autowired
  @Qualifier("dev.mvc.porder.Porder_detailProc")
  private Porder_detailProcInter porder_detailProc;

  public Porder_detailCont() {
    System.out.println("--> PorderCont created.");
  }
  
  //http://localhost:9090/team4/porder/create.do
  /**
   * 등록 폼
   * @return
   */
  @RequestMapping(value="/porder_detail/create.do", method=RequestMethod.GET )
  public ModelAndView create() {
    ModelAndView mav = new ModelAndView();
    mav.setViewName("/porder/create"); // webapp/porder/create.jsp
    return mav;
  }
  
  
  // url 길이의 제약이 있는 IE 환경 등에서 json 배열의 크기가 너무 크다면, post로 전송되게 해야 함
  //http://localhost:9090/team4/porder/payment.do
  /**
   * 등록 폼, 장바구니 리스트에서 넘어옴
   * @return
   */
  @RequestMapping(value="/porder/payment.do", method=RequestMethod.POST )
  public ModelAndView payment(String[] shopping_cartno, Porder_detailVO porderVO) {
    ModelAndView mav = new ModelAndView();
    // 디비에 접근하긴 해야할 듯, 조인도 필요할 듯, 계산도 다시해야 할 듯
    mav.addObject("shopping_cartlist", shopping_cartno);
    mav.addObject("porderVO", porderVO);
    mav.setViewName("/porder/create"); // webapp/porder/create.jsp
    return mav;
  }
  
 
 
}
