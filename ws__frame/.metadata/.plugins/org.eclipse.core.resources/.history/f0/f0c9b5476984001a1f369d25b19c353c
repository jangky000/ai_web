package dev.mvc.categrp;
 
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
 
@Controller // 패키지와 컨트롤러 등록시 자동으로 컨트롤러 등록
public class CategrpCont {
  @Autowired
  @Qualifier("dev.mvc.categrp.CategrpProc") // "Proc의 component"(한정자)를 호출해서 사용
  private CategrpProcInter categrpProc; // 초기값 null
  
  public CategrpCont() {
    System.out.println("    --> CategrpCont created");
  }
  
  //http://localhost:9090/resort/categrp/create.do
  @RequestMapping(value="/categrp/create.do", method=RequestMethod.GET)
  public ModelAndView create() {
    ModelAndView mav = new ModelAndView();
    mav.setViewName("/categrp/create"); //webapp/categrp/create.jsp
    
    return mav;
  }
  
  //http://localhost:9090/resort/categrp/create.do
  @RequestMapping(value="/categrp/create.do", method=RequestMethod.POST)
  public ModelAndView create(CategrpVO categrpVO) {
    ModelAndView mav = new ModelAndView();
    
    int cnt = this.categrpProc.create(categrpVO);
    mav.addObject("cnt", cnt); // request에 저장
    
    // type 1
    // mav.setViewName("/categrp/create_msg"); //webapp/categrp/create_msg.jsp
    // 작성 완료 후 새로고침 시 데이터가 반복(중복)되어 계속 insert가 이루어짐
    // forward 기법
    
    // type2 setViewName("redirect:/")
    mav.setViewName("redirect:/categrp/create_msg.jsp");
    // redirect기법, 예외적으로 사용
    // response.sendRedirect -> request 객체가 사라짐
    
    return mav;
  }
  
}
