<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.contents.ContentsDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.contents.ContentsDAOInter">
  <insert id="create" parameterType="ContentsVO">
    INSERT INTO contents(contentsno, memberno, cateno, title, content, web, ip,
                                     passwd, word, rdate)
    VALUES(contents_seq.nextval, #{memberno}, #{cateno}, #{title}, #{content}, #{web}, #{ip},
                #{passwd}, #{word}, sysdate)
  </insert>
  
  <select id="list_all" resultType="ContentsVO">
    SELECT contentsno, memberno, cateno, title, content, web, ip, passwd, word, rdate 
    FROM contents 
    ORDER BY contentsno DESC
  </select>  
  
  <!-- cateno별 목록 -->
  <select id="list" resultType="ContentsVO" parameterType="int">
    SELECT contentsno, memberno, cateno, title, content, web, ip, passwd, word, rdate 
    FROM contents
    WHERE cateno = #{cateno}
    ORDER BY contentsno DESC
  </select>  
  
  <select id="read" resultType="ContentsVO" parameterType="int">
    SELECT contentsno, memberno, cateno, title, content, recom, web, ip, passwd, word, rdate 
    FROM contents
    WHERE contentsno = #{contentsno}
  </select>
  
  <update id="update" parameterType="ContentsVO">
  UPDATE contents
  SET title=#{title}, content=#{content}, web=#{web}, word=#{word}
  WHERE contentsno = #{contentsno}
  </update>
  
  <!-- 패스워드 검사 -->
  <select id="passwd_check" parameterType="HashMap" resultType="int">
    SELECT COUNT(*) AS passwd_cnt
    FROM contents
    WHERE contentsno=#{contentsno} AND passwd=#{passwd}
  </select>
  
  <!-- 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM contents
    WHERE contentsno=#{contentsno}
  </delete>
  
  <!-- 전체 게시글 개수 -->
  <select id="total_count" resultType="int">
    SELECT COUNT(*) as cnt
    FROM contents
  </select>
  

  <resultMap type="Cate_Contents_VO" id="Cate_Contents_VO_Map">
    <!-- 부모테이블의 칼럼과 Categrp_Cate_VO_list의 필드 -->
    <result column="c_cateno" property="cateno"/>
    <result column="c_name" property="name"/>
    <result column="c_rdate" property="cate_rdate"/>
    <result column="t_contentsno" property="contentsno"/>
    <result column="t_title" property="title"/>
    <result column="t_web" property="web"/>
    <result column="t_ip" property="ip"/>
    <result column="t_rdate" property="rdate"/>
  </resultMap>
  
  <select id="cate_contents_memberno_list" parameterType="int" resultMap="Cate_Contents_VO_Map">
    SELECT c.cateno as c_cateno, c.name as c_name, c.rdate as c_rdate,
             t.contentsno as t_contentsno, t.title as t_title, t.web as t_web, t.ip as t_ip, t.rdate as t_rdate
    FROM cate c, contents t, member m
    WHERE c.cateno = t.cateno AND t.memberno = m.memberno AND m.memberno=#{memberno}
    ORDER BY  c.cateno ASC, t.contentsno DESC
  </select>
  
  <!-- 맵 등록, 수정, 삭제 기능 -->
  <update id="map" parameterMap="HashMap">
    UPDATE contents
    SET map=#{map}
    WHERE contentsno=#{contentsno}
  </update>
  
</mapper>







 
 